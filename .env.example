# Renomeie este arquivo para .env depois de preencher as variáveis de ambiente abaixo!

# Obtenha sua chave de API GROQ aqui -
# https://console.groq.com/keys
# Você só precisa desta variável de ambiente definida se quiser usar modelos Groq
GROQ_API_KEY=

# Obtenha sua chave de API HuggingFace aqui -
# https://huggingface.co/settings/tokens
# Você só precisa desta variável de ambiente definida se quiser usar modelos HuggingFace
HuggingFace_API_KEY=

# Obtenha sua chave de API Open AI seguindo estas instruções -
# https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key
# Você só precisa desta variável de ambiente definida se quiser usar modelos GPT
OPENAI_API_KEY=

# Obtenha sua chave de API Anthropic nas configurações da sua conta -
# https://console.anthropic.com/settings/keys
# Você só precisa desta variável de ambiente definida se quiser usar modelos Claude
ANTHROPIC_API_KEY=

# Obtenha sua chave de API OpenRouter nas configurações da sua conta -
# https://openrouter.ai/settings/keys
# Você só precisa desta variável de ambiente definida se quiser usar modelos OpenRouter
OPEN_ROUTER_API_KEY=

# Obtenha sua chave de API Google Generative AI seguindo estas instruções -
# https://console.cloud.google.com/apis/credentials
# Você só precisa desta variável de ambiente definida se quiser usar modelos Google Generative AI
GOOGLE_GENERATIVE_AI_API_KEY=

# Você só precisa desta variável de ambiente definida se quiser usar modelos oLLAMA
# NÃO USE http://localhost:11434 devido a problemas com IPV6
# USE EXEMPLO http://127.0.0.1:11434
OLLAMA_API_BASE_URL=

# Você só precisa desta variável de ambiente definida se quiser usar modelos OpenAI Like
OPENAI_LIKE_API_BASE_URL=

# Você só precisa desta variável de ambiente definida se quiser usar modelos Together AI
TOGETHER_API_BASE_URL=

# Você só precisa desta variável de ambiente definida se quiser usar modelos DeepSeek através da API deles
DEEPSEEK_API_KEY=

# Obtenha sua chave de API OpenAI Like
OPENAI_LIKE_API_KEY=

# Obtenha sua chave de API Together
TOGETHER_API_KEY=

# Você só precisa desta variável de ambiente definida se quiser usar modelos Hyperbolic
#Obtenha sua chave de API Hyperbolics em https://app.hyperbolic.xyz/settings
#baseURL="https://api.hyperbolic.xyz/v1/chat/completions"
HYPERBOLIC_API_KEY=
HYPERBOLIC_API_BASE_URL= 

# Obtenha sua chave de API Mistral seguindo estas instruções -
# https://console.mistral.ai/api-keys/
# Você só precisa desta variável de ambiente definida se quiser usar modelos Mistral
MISTRAL_API_KEY=

# Obtenha a chave de API Cohere seguindo estas instruções -
# https://dashboard.cohere.com/api-keys
# Você só precisa desta variável de ambiente definida se quiser usar modelos Cohere
COHERE_API_KEY=

# Obtenha a URL base do LMStudio do Console de Desenvolvedor do LM Studio
# Certifique-se de habilitar o CORS
# NÃO USE http://localhost:1234 devido a problemas com IPV6
# Exemplo: http://127.0.0.1:1234
LMSTUDIO_API_BASE_URL=

# Obtenha sua chave de API xAI
# https://x.ai/api
# Você só precisa desta variável de ambiente definida se quiser usar modelos xAI
XAI_API_KEY=

# Obtenha sua chave de API Perplexity aqui - 
# https://www.perplexity.ai/settings/api
# Você só precisa desta variável de ambiente definida se quiser usar modelos Perplexity
PERPLEXITY_API_KEY=

# Obtenha sua configuração AWS
# https://console.aws.amazon.com/iam/home
# O JSON deve incluir as seguintes chaves:
#   - region: A região AWS onde o Bedrock está disponível.
#   - accessKeyId: Seu ID de chave de acesso AWS.
#   - secretAccessKey: Sua chave de acesso secreta AWS.
#   - sessionToken (opcional): Token de sessão temporário se estiver usando uma função IAM ou credenciais temporárias.
# Exemplo JSON:
# {"region": "us-east-1", "accessKeyId": "seuAccessKeyId", "secretAccessKey": "suaSecretAccessKey", "sessionToken": "seuSessionToken"}
AWS_BEDROCK_CONFIG=

# Inclua esta variável de ambiente se quiser mais logs para depuração local
VITE_LOG_LEVEL=debug

# Obtenha seu Token de Acesso Pessoal do GitHub aqui -
# https://github.com/settings/tokens
# Este token é usado para:
# 1. Importar/clonar repositórios GitHub sem limitação de taxa
# 2. Acessar repositórios privados
# 3. Autenticação automática do GitHub (não precisa conectar manualmente na UI)
# 
# Para tokens clássicos, certifique-se que tenha estes escopos: repo, read:org, read:user
# Para tokens de granularidade fina, certifique-se que tenha acesso a Repositório e Organização
VITE_GITHUB_ACCESS_TOKEN=

# Especifique o tipo de token GitHub que você está usando
# Pode ser 'classic' ou 'fine-grained'
# Tokens clássicos são recomendados para acesso mais amplo
VITE_GITHUB_TOKEN_TYPE=classic

# Valores de Contexto de Exemplo para qwen2.5-coder:32b
# 
# DEFAULT_NUM_CTX=32768 # Consome 36GB de VRAM
# DEFAULT_NUM_CTX=24576 # Consome 32GB de VRAM
# DEFAULT_NUM_CTX=12288 # Consome 26GB de VRAM
# DEFAULT_NUM_CTX=6144 # Consome 24GB de VRAM
DEFAULT_NUM_CTX=
